{"id":"APvO","dependencies":[{"name":"E:\\my work\\utter-ipl-widget\\package.json","includedInParent":true,"mtime":1632168734304},{"name":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\package.json","includedInParent":true,"mtime":1632139441996},{"name":"./transports/index","loc":{"line":1,"column":27},"parent":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\socket.js","resolved":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\transports\\index.js"},{"name":"component-emitter","loc":{"line":2,"column":24},"parent":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\socket.js","resolved":"E:\\my work\\utter-ipl-widget\\node_modules\\component-emitter\\index.js"},{"name":"debug","loc":{"line":3,"column":22},"parent":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\socket.js","resolved":"E:\\my work\\utter-ipl-widget\\node_modules\\debug\\src\\browser.js"},{"name":"engine.io-parser","loc":{"line":4,"column":23},"parent":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\socket.js","resolved":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-parser\\lib\\index.js"},{"name":"parseuri","loc":{"line":5,"column":25},"parent":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\socket.js","resolved":"E:\\my work\\utter-ipl-widget\\node_modules\\parseuri\\index.js"},{"name":"parseqs","loc":{"line":6,"column":24},"parent":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\socket.js","resolved":"E:\\my work\\utter-ipl-widget\\node_modules\\parseqs\\index.js"},{"name":"./util","loc":{"line":7,"column":42},"parent":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\socket.js","resolved":"E:\\my work\\utter-ipl-widget\\node_modules\\engine.io-client\\lib\\util.js"}],"generated":{"js":"const t=require(\"./transports/index\"),e=require(\"component-emitter\"),s=require(\"debug\")(\"engine.io-client:socket\"),r=require(\"engine.io-parser\"),i=require(\"parseuri\"),o=require(\"parseqs\"),{installTimerFunctions:n}=require(\"./util\");class a extends e{constructor(t,e={}){super(),t&&\"object\"==typeof t&&(e=t,t=null),t?(t=i(t),e.hostname=t.host,e.secure=\"https\"===t.protocol||\"wss\"===t.protocol,e.port=t.port,t.query&&(e.query=t.query)):e.host&&(e.hostname=i(e.host).host),n(this,e),this.secure=null!=e.secure?e.secure:\"undefined\"!=typeof location&&\"https:\"===location.protocol,e.hostname&&!e.port&&(e.port=this.secure?\"443\":\"80\"),this.hostname=e.hostname||(\"undefined\"!=typeof location?location.hostname:\"localhost\"),this.port=e.port||(\"undefined\"!=typeof location&&location.port?location.port:this.secure?443:80),this.transports=e.transports||[\"polling\",\"websocket\"],this.readyState=\"\",this.writeBuffer=[],this.prevBufferLen=0,this.opts=Object.assign({path:\"/engine.io\",agent:!1,withCredentials:!1,upgrade:!0,jsonp:!0,timestampParam:\"t\",rememberUpgrade:!1,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!0},e),this.opts.path=this.opts.path.replace(/\\/$/,\"\")+\"/\",\"string\"==typeof this.opts.query&&(this.opts.query=o.decode(this.opts.query)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingTimeoutTimer=null,\"function\"==typeof addEventListener&&(this.opts.closeOnBeforeunload&&addEventListener(\"beforeunload\",()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},!1),\"localhost\"!==this.hostname&&(this.offlineEventListener=(()=>{this.onClose(\"transport close\")}),addEventListener(\"offline\",this.offlineEventListener,!1))),this.open()}createTransport(e){s('creating transport \"%s\"',e);const i=h(this.opts.query);i.EIO=r.protocol,i.transport=e,this.id&&(i.sid=this.id);const o=Object.assign({},this.opts.transportOptions[e],this.opts,{query:i,socket:this,hostname:this.hostname,secure:this.secure,port:this.port});return s(\"options: %j\",o),new t[e](o)}open(){let t;if(this.opts.rememberUpgrade&&a.priorWebsocketSuccess&&-1!==this.transports.indexOf(\"websocket\"))t=\"websocket\";else{if(0===this.transports.length)return void this.setTimeoutFn(()=>{this.emit(\"error\",\"No transports available\")},0);t=this.transports[0]}this.readyState=\"opening\";try{t=this.createTransport(t)}catch(e){return s(\"error while creating transport: %s\",e),this.transports.shift(),void this.open()}t.open(),this.setTransport(t)}setTransport(t){s(\"setting transport %s\",t.name),this.transport&&(s(\"clearing existing transport %s\",this.transport.name),this.transport.removeAllListeners()),this.transport=t,t.on(\"drain\",this.onDrain.bind(this)).on(\"packet\",this.onPacket.bind(this)).on(\"error\",this.onError.bind(this)).on(\"close\",()=>{this.onClose(\"transport close\")})}probe(t){s('probing transport \"%s\"',t);let e=this.createTransport(t,{probe:1}),r=!1;a.priorWebsocketSuccess=!1;const i=()=>{r||(s('probe transport \"%s\" opened',t),e.send([{type:\"ping\",data:\"probe\"}]),e.once(\"packet\",i=>{if(!r)if(\"pong\"===i.type&&\"probe\"===i.data){if(s('probe transport \"%s\" pong',t),this.upgrading=!0,this.emit(\"upgrading\",e),!e)return;a.priorWebsocketSuccess=\"websocket\"===e.name,s('pausing current transport \"%s\"',this.transport.name),this.transport.pause(()=>{r||\"closed\"!==this.readyState&&(s(\"changing transport and sending upgrade packet\"),u(),this.setTransport(e),e.send([{type:\"upgrade\"}]),this.emit(\"upgrade\",e),e=null,this.upgrading=!1,this.flush())})}else{s('probe transport \"%s\" failed',t);const r=new Error(\"probe error\");r.transport=e.name,this.emit(\"upgradeError\",r)}}))};function o(){r||(r=!0,u(),e.close(),e=null)}const n=r=>{const i=new Error(\"probe error: \"+r);i.transport=e.name,o(),s('probe transport \"%s\" failed because of error: %s',t,r),this.emit(\"upgradeError\",i)};function h(){n(\"transport closed\")}function p(){n(\"socket closed\")}function c(t){e&&t.name!==e.name&&(s('\"%s\" works - aborting \"%s\"',t.name,e.name),o())}const u=()=>{e.removeListener(\"open\",i),e.removeListener(\"error\",n),e.removeListener(\"close\",h),this.removeListener(\"close\",p),this.removeListener(\"upgrading\",c)};e.once(\"open\",i),e.once(\"error\",n),e.once(\"close\",h),this.once(\"close\",p),this.once(\"upgrading\",c),e.open()}onOpen(){if(s(\"socket open\"),this.readyState=\"open\",a.priorWebsocketSuccess=\"websocket\"===this.transport.name,this.emit(\"open\"),this.flush(),\"open\"===this.readyState&&this.opts.upgrade&&this.transport.pause){s(\"starting upgrade probes\");let t=0;const e=this.upgrades.length;for(;t<e;t++)this.probe(this.upgrades[t])}}onPacket(t){if(\"opening\"===this.readyState||\"open\"===this.readyState||\"closing\"===this.readyState)switch(s('socket receive: type \"%s\", data \"%s\"',t.type,t.data),this.emit(\"packet\",t),this.emit(\"heartbeat\"),t.type){case\"open\":this.onHandshake(JSON.parse(t.data));break;case\"ping\":this.resetPingTimeout(),this.sendPacket(\"pong\"),this.emit(\"ping\"),this.emit(\"pong\");break;case\"error\":const e=new Error(\"server error\");e.code=t.data,this.onError(e);break;case\"message\":this.emit(\"data\",t.data),this.emit(\"message\",t.data)}else s('packet received with socket readyState \"%s\"',this.readyState)}onHandshake(t){this.emit(\"handshake\",t),this.id=t.sid,this.transport.query.sid=t.sid,this.upgrades=this.filterUpgrades(t.upgrades),this.pingInterval=t.pingInterval,this.pingTimeout=t.pingTimeout,this.onOpen(),\"closed\"!==this.readyState&&this.resetPingTimeout()}resetPingTimeout(){this.clearTimeoutFn(this.pingTimeoutTimer),this.pingTimeoutTimer=this.setTimeoutFn(()=>{this.onClose(\"ping timeout\")},this.pingInterval+this.pingTimeout),this.opts.autoUnref&&this.pingTimeoutTimer.unref()}onDrain(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emit(\"drain\"):this.flush()}flush(){\"closed\"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(s(\"flushing %d packets in socket\",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.prevBufferLen=this.writeBuffer.length,this.emit(\"flush\"))}write(t,e,s){return this.sendPacket(\"message\",t,e,s),this}send(t,e,s){return this.sendPacket(\"message\",t,e,s),this}sendPacket(t,e,s,r){if(\"function\"==typeof e&&(r=e,e=void 0),\"function\"==typeof s&&(r=s,s=null),\"closing\"===this.readyState||\"closed\"===this.readyState)return;(s=s||{}).compress=!1!==s.compress;const i={type:t,data:e,options:s};this.emit(\"packetCreate\",i),this.writeBuffer.push(i),r&&this.once(\"flush\",r),this.flush()}close(){const t=()=>{this.onClose(\"forced close\"),s(\"socket closing - telling transport to close\"),this.transport.close()},e=()=>{this.removeListener(\"upgrade\",e),this.removeListener(\"upgradeError\",e),t()},r=()=>{this.once(\"upgrade\",e),this.once(\"upgradeError\",e)};return\"opening\"!==this.readyState&&\"open\"!==this.readyState||(this.readyState=\"closing\",this.writeBuffer.length?this.once(\"drain\",()=>{this.upgrading?r():t()}):this.upgrading?r():t()),this}onError(t){s(\"socket error %j\",t),a.priorWebsocketSuccess=!1,this.emit(\"error\",t),this.onClose(\"transport error\",t)}onClose(t,e){\"opening\"!==this.readyState&&\"open\"!==this.readyState&&\"closing\"!==this.readyState||(s('socket close with reason: \"%s\"',t),this.clearTimeoutFn(this.pingIntervalTimer),this.clearTimeoutFn(this.pingTimeoutTimer),this.transport.removeAllListeners(\"close\"),this.transport.close(),this.transport.removeAllListeners(),\"function\"==typeof removeEventListener&&removeEventListener(\"offline\",this.offlineEventListener,!1),this.readyState=\"closed\",this.id=null,this.emit(\"close\",t,e),this.writeBuffer=[],this.prevBufferLen=0)}filterUpgrades(t){const e=[];let s=0;const r=t.length;for(;s<r;s++)~this.transports.indexOf(t[s])&&e.push(t[s]);return e}}function h(t){const e={};for(let s in t)t.hasOwnProperty(s)&&(e[s]=t[s]);return e}a.priorWebsocketSuccess=!1,a.protocol=r.protocol,module.exports=a;"},"sourceMaps":null,"error":null,"hash":"5765adf7f1e7f1a848a0d07c493a91ed","cacheData":{"env":{}}}